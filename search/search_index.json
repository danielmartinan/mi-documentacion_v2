{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentaci\u00f3n de Desarrollo de Software","text":""},{"location":"#bienvenido","title":"Bienvenido","text":"<p>Esta documentaci\u00f3n est\u00e1 dise\u00f1ada para ayudarte a entender los conceptos fundamentales del desarrollo de software y las mejores pr\u00e1cticas en la industria.</p>"},{"location":"#contenido","title":"Contenido","text":""},{"location":"#guias","title":"Gu\u00edas","text":"<ul> <li>Instalaci\u00f3n y Configuraci\u00f3n</li> <li>Configuraci\u00f3n del Entorno</li> <li>Despliegue de Aplicaciones</li> </ul>"},{"location":"#ejemplos","title":"Ejemplos","text":"<ul> <li>Ejemplo de Proyecto B\u00e1sico</li> </ul>"},{"location":"#caracteristicas","title":"Caracter\u00edsticas","text":"<ul> <li>\ud83d\udcda Documentaci\u00f3n completa y estructurada</li> <li>\ud83d\udcbb Ejemplos pr\u00e1cticos</li> <li>\ud83d\udd27 Gu\u00edas paso a paso</li> <li>\ud83c\udfaf Mejores pr\u00e1cticas</li> </ul>"},{"location":"#requisitos-previos","title":"Requisitos Previos","text":"<p>Para aprovechar al m\u00e1ximo esta documentaci\u00f3n, aseg\u00farate de tener:</p> <ul> <li>Conocimientos b\u00e1sicos de programaci\u00f3n</li> <li>Entorno de desarrollo configurado</li> <li>Ganas de aprender y experimentar</li> </ul> <p>\ud83d\udc4d Espero que hayas conseguido desplegar la documentacion con \u00e9xito!</p>"},{"location":"#licencia","title":"Licencia","text":"<p>MIT</p>"},{"location":"#autor","title":"Autor","text":"<p>Daniel Marti\u00f1\u00e1n Otero</p>"},{"location":"ejemplos/ejemplo1/","title":"Ejemplo de Proyecto B\u00e1sico","text":""},{"location":"ejemplos/ejemplo1/#descripcion","title":"Descripci\u00f3n","text":"<p>Este ejemplo muestra c\u00f3mo crear un proyecto Python b\u00e1sico con documentaci\u00f3n usando MkDocs.</p>"},{"location":"ejemplos/ejemplo1/#estructura-del-proyecto","title":"Estructura del Proyecto","text":"<pre><code>ejemplo_proyecto/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 index.md\n\u2502   \u2514\u2500\u2500 guia/\n\u2502       \u2514\u2500\u2500 uso.md\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 calculadora.py\n\u251c\u2500\u2500 tests/\n\u2502   \u2514\u2500\u2500 test_calculadora.py\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 requirements.txt\n</code></pre>"},{"location":"ejemplos/ejemplo1/#implementacion","title":"Implementaci\u00f3n","text":""},{"location":"ejemplos/ejemplo1/#codigo-fuente","title":"C\u00f3digo Fuente","text":"<pre><code># src/calculadora.py\n\nclass Calculadora:\n    def sumar(self, a: float, b: float) -&gt; float:\n        \"\"\"Suma dos n\u00fameros.\"\"\"\n        return a + b\n\n    def restar(self, a: float, b: float) -&gt; float:\n        \"\"\"Resta dos n\u00fameros.\"\"\"\n        return a - b\n\n    def multiplicar(self, a: float, b: float) -&gt; float:\n        \"\"\"Multiplica dos n\u00fameros.\"\"\"\n        return a * b\n\n    def dividir(self, a: float, b: float) -&gt; float:\n        \"\"\"Divide dos n\u00fameros.\"\"\"\n        if b == 0:\n            raise ValueError(\"No se puede dividir por cero\")\n        return a / b\n</code></pre>"},{"location":"ejemplos/ejemplo1/#tests","title":"Tests","text":"<pre><code># tests/test_calculadora.py\n\nimport pytest\nfrom src.calculadora import Calculadora\n\ndef test_sumar():\n    calc = Calculadora()\n    assert calc.sumar(2, 3) == 5\n    assert calc.sumar(-1, 1) == 0\n\ndef test_restar():\n    calc = Calculadora()\n    assert calc.restar(5, 3) == 2\n    assert calc.restar(1, 1) == 0\n\ndef test_multiplicar():\n    calc = Calculadora()\n    assert calc.multiplicar(2, 3) == 6\n    assert calc.multiplicar(-2, 3) == -6\n\ndef test_dividir():\n    calc = Calculadora()\n    assert calc.dividir(6, 2) == 3\n    assert calc.dividir(5, 2) == 2.5\n\ndef test_dividir_por_cero():\n    calc = Calculadora()\n    with pytest.raises(ValueError):\n        calc.dividir(5, 0)\n</code></pre>"},{"location":"ejemplos/ejemplo1/#documentacion","title":"Documentaci\u00f3n","text":"<pre><code># Gu\u00eda de Uso\n\n## Instalaci\u00f3n\n\n1. Clona el repositorio:\n\n    ```bash\n    git clone https://github.com/tu-usuario/ejemplo-proyecto.git\n    cd ejemplo-proyecto\n    ```\n\n2. Crea un entorno virtual:\n\n    ```bash\n    python -m venv venv\n    source venv/bin/activate  # En Linux/Mac\n    venv\\Scripts\\activate     # En Windows\n    ```\n\n3. Instala las dependencias:\n\n    ```bash\n    pip install -r requirements.txt\n    ```\n\n## Uso\n\n```python\nfrom src.calculadora import Calculadora\n\n# Crear una instancia\ncalc = Calculadora()\n\n# Realizar operaciones\nresultado = calc.sumar(5, 3)  # 8\nresultado = calc.restar(10, 4)  # 6\nresultado = calc.multiplicar(2, 3)  # 6\nresultado = calc.dividir(10, 2)  # 5.0\n</code></pre>"},{"location":"ejemplos/ejemplo1/#tests_1","title":"Tests","text":"<p>Para ejecutar los tests:</p> <pre><code>pytest\n</code></pre>"},{"location":"ejemplos/ejemplo1/#documentacion_1","title":"Documentaci\u00f3n","text":"<p>Para ver la documentaci\u00f3n localmente:</p> <pre><code>mkdocs serve\n</code></pre>"},{"location":"ejemplos/ejemplo1/#despliegue","title":"Despliegue","text":"<p>Para desplegar la documentaci\u00f3n en GitHub Pages:</p> <pre><code>mkdocs gh-deploy\n</code></pre> <pre><code>\n## Archivos de Configuraci\u00f3n\n\n### requirements.txt\n```txt\npytest==7.4.0\nmkdocs-material==9.2.8\n</code></pre>"},{"location":"ejemplos/ejemplo1/#mkdocsyml","title":"mkdocs.yml","text":"<pre><code>site_name: Ejemplo de Proyecto\ntheme:\n  name: material\n  features:\n    - navigation.tabs\n    - navigation.sections\n    - navigation.expand\n    - content.code.copy\n</code></pre>"},{"location":"ejemplos/ejemplo1/#pasos-para-implementar","title":"Pasos para Implementar","text":"<ol> <li>Crea la estructura de directorios:</li> </ol> <p><code>bash    mkdir -p ejemplo_proyecto/{docs,src,tests}</code></p> <ol> <li> <p>Crea los archivos de c\u00f3digo fuente y tests</p> </li> <li> <p>Configura el entorno virtual:</p> </li> </ol> <p><code>bash    python -m venv venv    source venv/bin/activate  # En Linux/Mac    venv\\Scripts\\activate     # En Windows</code></p> <ol> <li>Instala las dependencias:</li> </ol> <p><code>bash    pip install -r requirements.txt</code></p> <ol> <li>Ejecuta los tests:</li> </ol> <p><code>bash    pytest</code></p> <ol> <li>Inicializa MkDocs:</li> </ol> <p><code>bash    mkdocs new .</code></p> <ol> <li> <p>Configura el archivo <code>mkdocs.yml</code></p> </li> <li> <p>Crea la documentaci\u00f3n</p> </li> <li> <p>Verifica localmente:</p> </li> </ol> <p><code>bash    mkdocs serve</code></p> <ol> <li> <p>Despliega en GitHub Pages:</p> <p><code>bash mkdocs gh-deploy</code></p> </li> </ol>"},{"location":"ejemplos/ejemplo1/#conclusion","title":"Conclusi\u00f3n","text":"<p>Este ejemplo muestra c\u00f3mo: - Estructurar un proyecto Python - Escribir tests - Documentar c\u00f3digo - Crear documentaci\u00f3n con MkDocs - Desplegar en GitHub Pages </p>"},{"location":"guia/configuracion/","title":"Configuraci\u00f3n del Entorno","text":""},{"location":"guia/configuracion/#configuracion-de-vs-code","title":"Configuraci\u00f3n de VS Code","text":""},{"location":"guia/configuracion/#ajustes-basicos","title":"Ajustes B\u00e1sicos","text":"<ol> <li>Abre la paleta de comandos (Ctrl+Shift+P)</li> <li>Escribe \"Preferences: Open Settings (JSON)\"</li> <li>A\u00f1ade las siguientes configuraciones:</li> </ol> <pre><code>{\n    \"editor.formatOnSave\": true,\n    \"editor.rulers\": [80],\n    \"files.trimTrailingWhitespace\": true,\n    \"files.insertFinalNewline\": true,\n    \"python.linting.enabled\": true\n}\n</code></pre>"},{"location":"guia/configuracion/#configuracion-de-python","title":"Configuraci\u00f3n de Python","text":"<ol> <li>Selecciona el int\u00e9rprete de Python:</li> <li>Ctrl+Shift+P</li> <li>\"Python: Select Interpreter\"</li> <li> <p>Elige el int\u00e9rprete de tu entorno virtual</p> </li> <li> <p>Instala las herramientas de desarrollo:    <code>bash    pip install pylint black</code></p> </li> </ol>"},{"location":"guia/configuracion/#configuracion-de-git","title":"Configuraci\u00f3n de Git","text":"<ol> <li> <p>Configura el editor por defecto:    <code>bash    git config --global core.editor \"code --wait\"</code></p> </li> <li> <p>Configura el merge tool:    <code>bash    git config --global merge.tool vscode</code></p> </li> </ol>"},{"location":"guia/configuracion/#configuracion-del-proyecto","title":"Configuraci\u00f3n del Proyecto","text":""},{"location":"guia/configuracion/#estructura-de-carpetas","title":"Estructura de Carpetas","text":"<pre><code>proyecto/\n\u251c\u2500\u2500 docs/\n\u2502   \u251c\u2500\u2500 guia/\n\u2502   \u2514\u2500\u2500 ejemplos/\n\u251c\u2500\u2500 src/\n\u251c\u2500\u2500 tests/\n\u251c\u2500\u2500 venv/\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"guia/configuracion/#archivos-de-configuracion","title":"Archivos de Configuraci\u00f3n","text":"<ol> <li><code>.gitignore</code>:</li> </ol> <pre><code>venv/\n__pycache__/\n*.pyc\n.pytest_cache/\n.coverage\n</code></pre> <ol> <li><code>requirements.txt</code>:</li> </ol> <pre><code>pytest==7.4.0\nblack==23.7.0\npylint==2.17.4\n</code></pre>"},{"location":"guia/configuracion/#configuracion-de-testing","title":"Configuraci\u00f3n de Testing","text":"<ol> <li> <p>Instala pytest:    <code>bash    pip install pytest</code></p> </li> <li> <p>Crea un archivo <code>conftest.py</code>:</p> </li> </ol> <pre><code>import pytest\n\n@pytest.fixture\ndef sample_data():\n    return {\"test\": \"data\"}\n</code></pre>"},{"location":"guia/configuracion/#verificacion-de-la-configuracion","title":"Verificaci\u00f3n de la Configuraci\u00f3n","text":"<ol> <li> <p>Ejecuta los tests:    <code>bash    pytest</code></p> </li> <li> <p>Verifica el formateo:    <code>bash    black --check .</code></p> </li> <li> <p>Verifica el linting:    <code>bash    pylint src/</code></p> </li> </ol>"},{"location":"guia/configuracion/#consejos-adicionales","title":"Consejos Adicionales","text":"<ul> <li>Usa snippets de VS Code para c\u00f3digo repetitivo</li> <li>Configura atajos de teclado personalizados</li> <li>Mant\u00e9n tus extensiones actualizadas</li> <li>Usa la integraci\u00f3n de Git de VS Code </li> </ul>"},{"location":"guia/despliegue/","title":"Despliegue de Aplicaciones","text":""},{"location":"guia/despliegue/#preparacion-para-el-despliegue","title":"Preparaci\u00f3n para el Despliegue","text":""},{"location":"guia/despliegue/#verificacion-de-requisitos","title":"Verificaci\u00f3n de Requisitos","text":"<ol> <li>Aseg\u00farate de que tu aplicaci\u00f3n:</li> <li>Pasa todas las pruebas</li> <li>No tiene errores de linting</li> <li>Est\u00e1 correctamente formateada</li> <li>Tiene todas las dependencias en <code>requirements.txt</code></li> </ol>"},{"location":"guia/despliegue/#optimizacion","title":"Optimizaci\u00f3n","text":"<ol> <li> <p>Elimina archivos innecesarios:    <code>bash    find . -type d -name \"__pycache__\" -exec rm -r {} +    find . -type f -name \"*.pyc\" -delete</code></p> </li> <li> <p>Verifica el tama\u00f1o de los archivos:    <code>bash    du -sh *</code></p> </li> </ol>"},{"location":"guia/despliegue/#despliegue-en-github-pages","title":"Despliegue en GitHub Pages","text":""},{"location":"guia/despliegue/#configuracion-del-repositorio","title":"Configuraci\u00f3n del Repositorio","text":"<ol> <li>Crea un nuevo repositorio en GitHub</li> <li> <p>Inicializa Git en tu proyecto:    <code>bash    git init    git add .    git commit -m \"Configuraci\u00f3n inicial\"</code></p> </li> <li> <p>Conecta con el repositorio remoto:    <code>bash    git remote add origin https://github.com/tu-usuario/tu-repositorio.git    git push -u origin main</code></p> </li> </ol>"},{"location":"guia/despliegue/#configuracion-de-github-actions","title":"Configuraci\u00f3n de GitHub Actions","text":"<ol> <li>Crea el archivo <code>.github/workflows/deploy.yml</code>:</li> </ol> <pre><code>name: Deploy MkDocs\non:\n  push:\n    branches: [ main ]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-python@v2\n        with:\n          python-version: '3.x'\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"guia/despliegue/#despliegue-manual","title":"Despliegue Manual","text":"<ol> <li> <p>Construye la documentaci\u00f3n:    <code>bash    mkdocs build</code></p> </li> <li> <p>Verifica la construcci\u00f3n:    <code>bash    mkdocs serve</code></p> </li> <li> <p>Despliega a GitHub Pages:    <code>bash    mkdocs gh-deploy</code></p> </li> </ol>"},{"location":"guia/despliegue/#verificacion-del-despliegue","title":"Verificaci\u00f3n del Despliegue","text":"<ol> <li>Espera unos minutos a que GitHub Actions complete el proceso</li> <li>Visita tu sitio en: <code>https://tu-usuario.github.io/tu-repositorio</code></li> <li>Verifica que:</li> <li>Todas las p\u00e1ginas se cargan correctamente</li> <li>Las im\u00e1genes se muestran</li> <li>Los enlaces funcionan</li> <li>El dise\u00f1o es responsivo</li> </ol>"},{"location":"guia/despliegue/#mantenimiento","title":"Mantenimiento","text":""},{"location":"guia/despliegue/#actualizacion-de-la-documentacion","title":"Actualizaci\u00f3n de la Documentaci\u00f3n","text":"<ol> <li>Haz tus cambios en los archivos Markdown</li> <li> <p>Verifica localmente:    <code>bash    mkdocs serve</code></p> </li> <li> <p>Commit y push:    <code>bash    git add .    git commit -m \"Actualizaci\u00f3n de la documentaci\u00f3n\"    git push</code></p> </li> </ol>"},{"location":"guia/despliegue/#solucion-de-problemas","title":"Soluci\u00f3n de Problemas","text":"<p>Si encuentras problemas:</p> <ol> <li>Verifica los logs de GitHub Actions</li> <li>Aseg\u00farate de que todos los archivos est\u00e1n en el repositorio</li> <li>Verifica la configuraci\u00f3n de GitHub Pages</li> <li>Revisa los permisos del repositorio</li> </ol>"},{"location":"guia/despliegue/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n de GitHub Actions</li> <li>Gu\u00eda de GitHub Pages</li> <li>Documentaci\u00f3n de MkDocs </li> </ul>"},{"location":"guia/instalacion/","title":"Instalaci\u00f3n y Configuraci\u00f3n","text":""},{"location":"guia/instalacion/#requisitos-del-sistema","title":"Requisitos del Sistema","text":"<p>Antes de comenzar, aseg\u00farate de tener instalado:</p> <ul> <li>Python 3.7 o superior</li> <li>Git</li> <li>Visual Studio Code</li> </ul>"},{"location":"guia/instalacion/#instalacion-de-python","title":"Instalaci\u00f3n de Python","text":"<ol> <li>Descarga Python desde python.org</li> <li>Durante la instalaci\u00f3n, marca la casilla \"Add Python to PATH\"</li> <li>Verifica la instalaci\u00f3n abriendo una terminal y ejecutando:    <code>bash    python --version</code></li> </ol>"},{"location":"guia/instalacion/#instalacion-de-git","title":"Instalaci\u00f3n de Git","text":"<ol> <li>Descarga Git desde git-scm.com</li> <li>Sigue el asistente de instalaci\u00f3n con las opciones por defecto</li> <li>Verifica la instalaci\u00f3n:    <code>bash    git --version</code></li> </ol>"},{"location":"guia/instalacion/#instalacion-de-visual-studio-code","title":"Instalaci\u00f3n de Visual Studio Code","text":"<ol> <li>Descarga VS Code desde code.visualstudio.com</li> <li>Instala las siguientes extensiones:</li> <li>Python</li> <li>Git</li> <li>Markdown Preview Enhanced</li> </ol>"},{"location":"guia/instalacion/#configuracion-inicial","title":"Configuraci\u00f3n Inicial","text":"<ol> <li> <p>Configura tu identidad en Git:    <code>bash    git config --global user.name \"Tu Nombre\"    git config --global user.email \"tu@email.com\"</code></p> </li> <li> <p>Crea un entorno virtual para tu proyecto:    <code>bash    python -m venv venv</code></p> </li> <li> <p>Activa el entorno virtual:</p> </li> <li>Windows:      <code>bash      venv\\Scripts\\activate</code></li> <li>Linux/Mac:      <code>bash      source venv/bin/activate</code></li> </ol>"},{"location":"guia/instalacion/#verificacion","title":"Verificaci\u00f3n","text":"<p>Para verificar que todo est\u00e1 correctamente instalado:</p> <ol> <li>Abre VS Code</li> <li>Abre una nueva terminal</li> <li>Ejecuta los siguientes comandos:    <code>bash    python --version    git --version    code --version</code></li> </ol> <p>Si todos los comandos se ejecutan sin errores, \u00a1est\u00e1s listo para comenzar! </p>"}]}